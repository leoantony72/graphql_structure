package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"test/internal/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.User, error) {
	// panic(fmt.Errorf("not implemented: CreateUser - createUser"))
	user := &model.User{Name: input.Name, Age: input.Age}
	data := r.repo.CreateUser(user)
	return data, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	// panic(fmt.Errorf("not implemented: Users - users"))
	data := r.repo.GetDataall()
	return data, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, input *model.GetUserByID) (*model.User, error) {
	data := r.repo.GetData(input.ID)
	return data, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
